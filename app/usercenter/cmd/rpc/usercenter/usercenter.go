// Code generated by goctl. DO NOT EDIT.
// Source: usercenter.proto

package usercenter

import (
	"context"

	"rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetInfoRequest           = pb.GetInfoRequest
	GetInfoResponse          = pb.GetInfoResponse
	RegisterRequest          = pb.RegisterRequest
	RegisterResponse         = pb.RegisterResponse
	User                     = pb.User
	VerificationCodeRequest  = pb.VerificationCodeRequest
	VerificationCodeResponse = pb.VerificationCodeResponse

	Usercenter interface {
		GetVerificationCode(ctx context.Context, in *VerificationCodeRequest, opts ...grpc.CallOption) (*VerificationCodeResponse, error)
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
		GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error)
	}

	defaultUsercenter struct {
		cli zrpc.Client
	}
)

func NewUsercenter(cli zrpc.Client) Usercenter {
	return &defaultUsercenter{
		cli: cli,
	}
}

func (m *defaultUsercenter) GetVerificationCode(ctx context.Context, in *VerificationCodeRequest, opts ...grpc.CallOption) (*VerificationCodeResponse, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetVerificationCode(ctx, in, opts...)
}

func (m *defaultUsercenter) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUsercenter) GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetInfo(ctx, in, opts...)
}
