// Code generated by goctl. DO NOT EDIT.
// Source: schedule.proto

package schedule

import (
	"context"

	"MuxiFresh2.0/MuXiFresh-Be-2.0/app/schedule/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CheckReq  = pb.CheckReq
	CheckResp = pb.CheckResp

	Schedule interface {
		Check(ctx context.Context, in *CheckReq, opts ...grpc.CallOption) (*CheckResp, error)
	}

	defaultSchedule struct {
		cli zrpc.Client
	}
)

func NewSchedule(cli zrpc.Client) Schedule {
	return &defaultSchedule{
		cli: cli,
	}
}

func (m *defaultSchedule) Check(ctx context.Context, in *CheckReq, opts ...grpc.CallOption) (*CheckResp, error) {
	client := pb.NewScheduleClient(m.cli.Conn())
	return client.Check(ctx, in, opts...)
}
