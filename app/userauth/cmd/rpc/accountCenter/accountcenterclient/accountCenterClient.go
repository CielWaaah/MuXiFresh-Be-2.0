// Code generated by goctl. DO NOT EDIT.
// Source: userinfo.proto

package accountcenterclient

import (
	"context"

	"MuXiFresh-Be-2.0/app/userauth/cmd/rpc/accountCenter/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BindingStudentIDReq  = pb.BindingStudentIDReq
	BindingStudentIDResp = pb.BindingStudentIDResp
	CcnuLoginReq         = pb.CcnuLoginReq
	CcnuLoginResp        = pb.CcnuLoginResp
	LoginVerifyReq       = pb.LoginVerifyReq
	LoginVerifyResp      = pb.LoginVerifyResp
	PassChangeReq        = pb.PassChangeReq
	PassChangeResp       = pb.PassChangeResp
	RegisterDataReq      = pb.RegisterDataReq
	RegisterDataResp     = pb.RegisterDataResp

	AccountCenterClient interface {
		Register(ctx context.Context, in *RegisterDataReq, opts ...grpc.CallOption) (*RegisterDataResp, error)
		Login(ctx context.Context, in *LoginVerifyReq, opts ...grpc.CallOption) (*LoginVerifyResp, error)
		PassChange(ctx context.Context, in *PassChangeReq, opts ...grpc.CallOption) (*PassChangeResp, error)
		CcnuLogin(ctx context.Context, in *CcnuLoginReq, opts ...grpc.CallOption) (*CcnuLoginResp, error)
		BindStudentID(ctx context.Context, in *BindingStudentIDReq, opts ...grpc.CallOption) (*BindingStudentIDResp, error)
	}

	defaultAccountCenterClient struct {
		cli zrpc.Client
	}
)

func NewAccountCenterClient(cli zrpc.Client) AccountCenterClient {
	return &defaultAccountCenterClient{
		cli: cli,
	}
}

func (m *defaultAccountCenterClient) Register(ctx context.Context, in *RegisterDataReq, opts ...grpc.CallOption) (*RegisterDataResp, error) {
	client := pb.NewAccountCenterClientClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultAccountCenterClient) Login(ctx context.Context, in *LoginVerifyReq, opts ...grpc.CallOption) (*LoginVerifyResp, error) {
	client := pb.NewAccountCenterClientClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultAccountCenterClient) PassChange(ctx context.Context, in *PassChangeReq, opts ...grpc.CallOption) (*PassChangeResp, error) {
	client := pb.NewAccountCenterClientClient(m.cli.Conn())
	return client.PassChange(ctx, in, opts...)
}

func (m *defaultAccountCenterClient) CcnuLogin(ctx context.Context, in *CcnuLoginReq, opts ...grpc.CallOption) (*CcnuLoginResp, error) {
	client := pb.NewAccountCenterClientClient(m.cli.Conn())
	return client.CcnuLogin(ctx, in, opts...)
}

func (m *defaultAccountCenterClient) BindStudentID(ctx context.Context, in *BindingStudentIDReq, opts ...grpc.CallOption) (*BindingStudentIDResp, error) {
	client := pb.NewAccountCenterClientClient(m.cli.Conn())
	return client.BindStudentID(ctx, in, opts...)
}
