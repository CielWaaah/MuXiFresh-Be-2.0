// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	assigned "MuXiFresh-Be-2.0/app/task/cmd/api/internal/handler/assigned"
	comment "MuXiFresh-Be-2.0/app/task/cmd/api/internal/handler/comment"
	submitted "MuXiFresh-Be-2.0/app/task/cmd/api/internal/handler/submitted"
	"MuXiFresh-Be-2.0/app/task/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/submitted/:id/comment",
				Handler: comment.GetSubmissionCommentHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/submitted/:id/comment",
				Handler: comment.SetSubmissionCommentHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/submitted/comment/:id",
				Handler: comment.DelSubmissionCommentHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/v2/task"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/assigned/:id/status",
				Handler: submitted.GetMySubmissionStatusHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/submitted",
				Handler: submitted.SetSubmissionHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/submitted/:userID/:assignedTaskID",
				Handler: submitted.GetSubmissionInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/assigned/:id/completion",
				Handler: submitted.GetAllSubmissionStatusHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/v2/task"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/assigned/list",
				Handler: assigned.GetAssignmentListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/assigned/:id",
				Handler: assigned.GetAssignmentInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/assigned",
				Handler: assigned.SetAssignmentHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/api/v2/task"),
	)
}
