// Code generated by goctl. DO NOT EDIT.
package types

type GetMySubmissionStatusReq struct {
	Authorization string `header:"Authorization"`
	AssignmentID  string `path:"id"`
}

type GetMySubmissionStatusResp struct {
	MySubmissionStatus string `json:"task_status,options=[notSubmitted,submitted,reviewed]"`
}

type SetSubmissionReq struct {
	Authorization string   `header:"Authorization"`
	AssignmentID  string   `json:"assignedTaskID,optional"`
	Urls          []string `json:"urls"`
}

type SetSubmissionResp struct {
	Flag bool `json:"flag"`
}

type GetSubmissionInfoReq struct {
	Authorization string `header:"Authorization"`
	AssignmentID  string `path:"assignedTaskID"`
	UserID        string `path:"userID"`
}

type GetSubmissionInfoResp struct {
	SubmissionID string   `json:"submission_id"`
	Urls         []string `json:"urls"`
}

type GetAllSubmissionStatusReq struct {
	Authorization string `header:"Authorization"`
	AssignmentID  string `path:"id"`
	Page          int64  `form:"page"`
}

type Completion struct {
	UserId string `json:"user_id"`
	Name   string `json:"name"`
	Grade  string `json:"grade"`
	School string `json:"school"`
	Status string `json:"status,options=[yes,no]"`
}

type GetAllSubmissionStatusResp struct {
	Completions []Completion `json:"completions"`
}

type GetAssignmentListReq struct {
	Authorization string `header:"Authorization"`
	Group         string `form:"group,options=[Product,Design,Frontend,Backend,Android]"`
}

type Title struct {
	ID   string `json:"id"`
	Text string `json:"text"`
}

type GetAssignmentListResp struct {
	Titles []Title `json:"titles"`
}

type GetAssignmentInfoReq struct {
	Authorization string `header:"Authorization"`
	AssignmentID  string `path:"id"`
}

type GetAssignmentInfoResp struct {
	TitleText string   `json:"title_text"`
	Content   string   `json:"content"`
	Urls      []string `json:"urls"`
}

type SetAssignmentReq struct {
	Authorization string   `header:"Authorization"`
	AssignmentID  string   `json:"assignedTaskID,optional"`
	Group         string   `form:"group,options=[Product,Design,Frontend,Backend,Android]"`
	TitleText     string   `json:"title_text"`
	Content       string   `json:"content"`
	Urls          []string `json:"urls"`
}

type SetAssignmentResp struct {
	Flag bool `json:"flag"`
}

type GetSubmissionCommentReq struct {
	Authorization string `header:"Authorization"`
	SubmissionID  string `path:"id"`
}

type Comment struct {
	CommentID string `json:"comment_id"`
	Avatar    string `json:"avatar"`
	Nickname  string `json:"nickname"`
	Group     string `json:"group"`
	Content   string `json:"content"`
}

type GetSubmissionCommentResp struct {
	Comments []Comment `json:"comments"`
}

type SetSubmissionCommentReq struct {
	Authorization string `header:"Authorization"`
	SubmissionID  string `path:"id"`
	Content       string `json:"content"`
}

type SetSubmissionCommentResp struct {
	Flag bool `json:"flag"`
}

type DelSubmissionCommentReq struct {
	Authorization string `header:"Authorization"`
	CommentID     string `path:"id"`
}

type DelSubmissionCommentResp struct {
	Flag bool `json:"flag"`
}
