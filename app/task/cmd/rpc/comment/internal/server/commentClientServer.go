// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package server

import (
	"context"

	"MuXiFresh-Be-2.0/app/task/cmd/rpc/comment/internal/logic"
	"MuXiFresh-Be-2.0/app/task/cmd/rpc/comment/internal/svc"
	"MuXiFresh-Be-2.0/app/task/cmd/rpc/comment/pb"
)

type CommentClientServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedCommentClientServer
}

func NewCommentClientServer(svcCtx *svc.ServiceContext) *CommentClientServer {
	return &CommentClientServer{
		svcCtx: svcCtx,
	}
}

func (s *CommentClientServer) GetSubmissionComment(ctx context.Context, in *pb.GetSubmissionCommentReq) (*pb.GetSubmissionCommentResp, error) {
	l := logic.NewGetSubmissionCommentLogic(ctx, s.svcCtx)
	return l.GetSubmissionComment(in)
}

func (s *CommentClientServer) SetSubmissionComment(ctx context.Context, in *pb.SetSubmissionCommentReq) (*pb.SetSubmissionCommentResp, error) {
	l := logic.NewSetSubmissionCommentLogic(ctx, s.svcCtx)
	return l.SetSubmissionComment(in)
}

func (s *CommentClientServer) DelSubmissionComment(ctx context.Context, in *pb.DelSubmissionCommentReq) (*pb.DelSubmissionCommentResp, error) {
	l := logic.NewDelSubmissionCommentLogic(ctx, s.svcCtx)
	return l.DelSubmissionComment(in)
}

func (s *CommentClientServer) IsMyComment(ctx context.Context, in *pb.IsMyCommentReq) (*pb.IsMyCommentResp, error) {
	l := logic.NewIsMyCommentLogic(ctx, s.svcCtx)
	return l.IsMyComment(in)
}
